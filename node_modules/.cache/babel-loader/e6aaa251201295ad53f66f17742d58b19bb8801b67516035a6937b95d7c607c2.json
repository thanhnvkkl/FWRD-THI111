{"ast":null,"code":"/* FileSaver.js\r\n * A saveAs() FileSaver implementation.\r\n * 1.1.20160520\r\n *\r\n * By Eli Grey, http://eligrey.com\r\n * License: MIT\r\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || function (view) {\n  \"use strict\";\n\n  // IE <10 is explicitly unsupported\n  if (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n    return;\n  }\n  var doc = view.document\n    // only get URL when necessary in case Blob.js hasn't overridden it yet\n    ,\n    get_URL = function () {\n      return view.URL || view.webkitURL || view;\n    },\n    save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\"),\n    can_use_save_link = (\"download\" in save_link),\n    click = function (node) {\n      var event = new MouseEvent(\"click\");\n      node.dispatchEvent(event);\n    },\n    is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent),\n    webkit_req_fs = view.webkitRequestFileSystem,\n    req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem,\n    throw_outside = function (ex) {\n      (view.setImmediate || view.setTimeout)(function () {\n        throw ex;\n      }, 0);\n    },\n    force_saveable_type = \"application/octet-stream\",\n    fs_min_size = 0\n    // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n    ,\n    arbitrary_revoke_timeout = 1000 * 40 // in ms\n    ,\n    revoke = function (file) {\n      var revoker = function () {\n        if (typeof file === \"string\") {\n          // file is an object URL\n          get_URL().revokeObjectURL(file);\n        } else {\n          // file is a File\n          file.remove();\n        }\n      };\n      /* // Take note W3C:\r\n      var\r\n        uri = typeof file === \"string\" ? file : file.toURL()\r\n      , revoker = function(evt) {\r\n      \t// idealy DownloadFinishedEvent.data would be the URL requested\r\n      \tif (evt.data === uri) {\r\n      \t\tif (typeof file === \"string\") { // file is an object URL\r\n      \t\t\tget_URL().revokeObjectURL(file);\r\n      \t\t} else { // file is a File\r\n      \t\t\tfile.remove();\r\n      \t\t}\r\n      \t}\r\n      }\r\n      ;\r\n      view.addEventListener(\"downloadfinished\", revoker);\r\n      */\n      setTimeout(revoker, arbitrary_revoke_timeout);\n    },\n    dispatch = function (filesaver, event_types, event) {\n      event_types = [].concat(event_types);\n      var i = event_types.length;\n      while (i--) {\n        var listener = filesaver[\"on\" + event_types[i]];\n        if (typeof listener === \"function\") {\n          try {\n            listener.call(filesaver, event || filesaver);\n          } catch (ex) {\n            throw_outside(ex);\n          }\n        }\n      }\n    },\n    auto_bom = function (blob) {\n      // prepend BOM for UTF-8 XML and text/* types (including HTML)\n      if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n        return new Blob([\"\\xEF\\xBB\\xBF\", blob], {\n          type: blob.type\n        });\n      }\n      return blob;\n    },\n    FileSaver = function (blob, name, no_auto_bom) {\n      if (!no_auto_bom) {\n        blob = auto_bom(blob);\n      }\n      // First try a.download, then web filesystem, then object URLs\n      var filesaver = this,\n        type = blob.type,\n        blob_changed = false,\n        object_url,\n        target_view,\n        dispatch_all = function () {\n          dispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n        }\n        // on any filesys errors revert to saving with object URLs\n        ,\n        fs_error = function () {\n          if (target_view && is_safari && typeof FileReader !== \"undefined\") {\n            // Safari doesn't allow downloading of blob urls\n            var reader = new FileReader();\n            reader.onloadend = function () {\n              var base64Data = reader.result;\n              target_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n              filesaver.readyState = filesaver.DONE;\n              dispatch_all();\n            };\n            reader.readAsDataURL(blob);\n            filesaver.readyState = filesaver.INIT;\n            return;\n          }\n          // don't create more object URLs than needed\n          if (blob_changed || !object_url) {\n            object_url = get_URL().createObjectURL(blob);\n          }\n          if (target_view) {\n            target_view.location.href = object_url;\n          } else {\n            var new_tab = view.open(object_url, \"_blank\");\n            if (new_tab === undefined && is_safari) {\n              // Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n              view.location.href = object_url;\n            }\n          }\n          filesaver.readyState = filesaver.DONE;\n          dispatch_all();\n          revoke(object_url);\n        },\n        abortable = function (func) {\n          return function () {\n            if (filesaver.readyState !== filesaver.DONE) {\n              return func.apply(this, arguments);\n            }\n          };\n        },\n        create_if_not_found = {\n          create: true,\n          exclusive: false\n        },\n        slice;\n      filesaver.readyState = filesaver.INIT;\n      if (!name) {\n        name = \"download\";\n      }\n      if (can_use_save_link) {\n        object_url = get_URL().createObjectURL(blob);\n        setTimeout(function () {\n          save_link.href = object_url;\n          save_link.download = name;\n          click(save_link);\n          dispatch_all();\n          revoke(object_url);\n          filesaver.readyState = filesaver.DONE;\n        });\n        return;\n      }\n      // Object and web filesystem URLs have a problem saving in Google Chrome when\n      // viewed in a tab, so I force save with application/octet-stream\n      // http://code.google.com/p/chromium/issues/detail?id=91158\n      // Update: Google errantly closed 91158, I submitted it again:\n      // https://code.google.com/p/chromium/issues/detail?id=389642\n      if (view.chrome && type && type !== force_saveable_type) {\n        slice = blob.slice || blob.webkitSlice;\n        blob = slice.call(blob, 0, blob.size, force_saveable_type);\n        blob_changed = true;\n      }\n      // Since I can't be sure that the guessed media type will trigger a download\n      // in WebKit, I append .download to the filename.\n      // https://bugs.webkit.org/show_bug.cgi?id=65440\n      if (webkit_req_fs && name !== \"download\") {\n        name += \".download\";\n      }\n      if (type === force_saveable_type || webkit_req_fs) {\n        target_view = view;\n      }\n      if (!req_fs) {\n        fs_error();\n        return;\n      }\n      fs_min_size += blob.size;\n      req_fs(view.TEMPORARY, fs_min_size, abortable(function (fs) {\n        fs.root.getDirectory(\"saved\", create_if_not_found, abortable(function (dir) {\n          var save = function () {\n            dir.getFile(name, create_if_not_found, abortable(function (file) {\n              file.createWriter(abortable(function (writer) {\n                writer.onwriteend = function (event) {\n                  target_view.location.href = file.toURL();\n                  filesaver.readyState = filesaver.DONE;\n                  dispatch(filesaver, \"writeend\", event);\n                  revoke(file);\n                };\n                writer.onerror = function () {\n                  var error = writer.error;\n                  if (error.code !== error.ABORT_ERR) {\n                    fs_error();\n                  }\n                };\n                \"writestart progress write abort\".split(\" \").forEach(function (event) {\n                  writer[\"on\" + event] = filesaver[\"on\" + event];\n                });\n                writer.write(blob);\n                filesaver.abort = function () {\n                  writer.abort();\n                  filesaver.readyState = filesaver.DONE;\n                };\n                filesaver.readyState = filesaver.WRITING;\n              }), fs_error);\n            }), fs_error);\n          };\n          dir.getFile(name, {\n            create: false\n          }, abortable(function (file) {\n            // delete file if it already exists\n            file.remove();\n            save();\n          }), abortable(function (ex) {\n            if (ex.code === ex.NOT_FOUND_ERR) {\n              save();\n            } else {\n              fs_error();\n            }\n          }));\n        }), fs_error);\n      }), fs_error);\n    },\n    FS_proto = FileSaver.prototype,\n    saveAs = function (blob, name, no_auto_bom) {\n      return new FileSaver(blob, name, no_auto_bom);\n    };\n  // IE 10+ (native saveAs)\n  if (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n    return function (blob, name, no_auto_bom) {\n      if (!no_auto_bom) {\n        blob = auto_bom(blob);\n      }\n      return navigator.msSaveOrOpenBlob(blob, name || \"download\");\n    };\n  }\n  FS_proto.abort = function () {\n    var filesaver = this;\n    filesaver.readyState = filesaver.DONE;\n    dispatch(filesaver, \"abort\");\n  };\n  FS_proto.readyState = FS_proto.INIT = 0;\n  FS_proto.WRITING = 1;\n  FS_proto.DONE = 2;\n  FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n  return saveAs;\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this.content);\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if (typeof define !== \"undefined\" && define !== null && define.amd !== null) {\n  define([], function () {\n    return saveAs;\n  });\n}","map":{"version":3,"names":["saveAs","view","navigator","test","userAgent","doc","document","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","fs_min_size","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","concat","i","length","listener","call","auto_bom","blob","type","Blob","FileSaver","name","no_auto_bom","blob_changed","object_url","target_view","dispatch_all","split","fs_error","FileReader","reader","onloadend","base64Data","result","location","href","slice","search","readyState","DONE","readAsDataURL","INIT","createObjectURL","new_tab","open","undefined","abortable","func","apply","arguments","create_if_not_found","create","exclusive","download","chrome","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","error","code","ABORT_ERR","forEach","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","onabort","self","window","content","module","exports","define","amd"],"sources":["/Users/thanhnvkkl/Downloads/BTVN1/test1/node_modules/filesaver.js-npm/FileSaver.js"],"sourcesContent":["/* FileSaver.js\r\n * A saveAs() FileSaver implementation.\r\n * 1.1.20160520\r\n *\r\n * By Eli Grey, http://eligrey.com\r\n * License: MIT\r\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n */\r\n\r\n/*global self */\r\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\r\n\r\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\r\n\r\nvar saveAs = saveAs || (function(view) {\r\n\t\"use strict\";\r\n\t// IE <10 is explicitly unsupported\r\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\r\n\t\treturn;\r\n\t}\r\n\tvar\r\n\t\t  doc = view.document\r\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\r\n\t\t, get_URL = function() {\r\n\t\t\treturn view.URL || view.webkitURL || view;\r\n\t\t}\r\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\r\n\t\t, can_use_save_link = \"download\" in save_link\r\n\t\t, click = function(node) {\r\n\t\t\tvar event = new MouseEvent(\"click\");\r\n\t\t\tnode.dispatchEvent(event);\r\n\t\t}\r\n\t\t, is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\r\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\r\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\r\n\t\t, throw_outside = function(ex) {\r\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\r\n\t\t\t\tthrow ex;\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t\t, force_saveable_type = \"application/octet-stream\"\r\n\t\t, fs_min_size = 0\r\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\r\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\r\n\t\t, revoke = function(file) {\r\n\t\t\tvar revoker = function() {\r\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\r\n\t\t\t\t\tget_URL().revokeObjectURL(file);\r\n\t\t\t\t} else { // file is a File\r\n\t\t\t\t\tfile.remove();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t/* // Take note W3C:\r\n\t\t\tvar\r\n\t\t\t  uri = typeof file === \"string\" ? file : file.toURL()\r\n\t\t\t, revoker = function(evt) {\r\n\t\t\t\t// idealy DownloadFinishedEvent.data would be the URL requested\r\n\t\t\t\tif (evt.data === uri) {\r\n\t\t\t\t\tif (typeof file === \"string\") { // file is an object URL\r\n\t\t\t\t\t\tget_URL().revokeObjectURL(file);\r\n\t\t\t\t\t} else { // file is a File\r\n\t\t\t\t\t\tfile.remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t;\r\n\t\t\tview.addEventListener(\"downloadfinished\", revoker);\r\n\t\t\t*/\r\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\r\n\t\t}\r\n\t\t, dispatch = function(filesaver, event_types, event) {\r\n\t\t\tevent_types = [].concat(event_types);\r\n\t\t\tvar i = event_types.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\r\n\t\t\t\tif (typeof listener === \"function\") {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\r\n\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\tthrow_outside(ex);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t, auto_bom = function(blob) {\r\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\r\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\r\n\t\t\t\treturn new Blob([\"\\xEF\\xBB\\xBF\", blob], {type: blob.type});\r\n\t\t\t}\r\n\t\t\treturn blob;\r\n\t\t}\r\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\r\n\t\t\tif (!no_auto_bom) {\r\n\t\t\t\tblob = auto_bom(blob);\r\n\t\t\t}\r\n\t\t\t// First try a.download, then web filesystem, then object URLs\r\n\t\t\tvar\r\n\t\t\t\t  filesaver = this\r\n\t\t\t\t, type = blob.type\r\n\t\t\t\t, blob_changed = false\r\n\t\t\t\t, object_url\r\n\t\t\t\t, target_view\r\n\t\t\t\t, dispatch_all = function() {\r\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\r\n\t\t\t\t}\r\n\t\t\t\t// on any filesys errors revert to saving with object URLs\r\n\t\t\t\t, fs_error = function() {\r\n\t\t\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\r\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\r\n\t\t\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\t\t\treader.onloadend = function() {\r\n\t\t\t\t\t\t\tvar base64Data = reader.result;\r\n\t\t\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\r\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\r\n\t\t\t\t\t\t\tdispatch_all();\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treader.readAsDataURL(blob);\r\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// don't create more object URLs than needed\r\n\t\t\t\t\tif (blob_changed || !object_url) {\r\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (target_view) {\r\n\t\t\t\t\t\ttarget_view.location.href = object_url;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\r\n\t\t\t\t\t\tif (new_tab === undefined && is_safari) {\r\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\r\n\t\t\t\t\t\t\tview.location.href = object_url;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\r\n\t\t\t\t\tdispatch_all();\r\n\t\t\t\t\trevoke(object_url);\r\n\t\t\t\t}\r\n\t\t\t\t, abortable = function(func) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\r\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\r\n\t\t\t\t, slice\r\n\t\t\t;\r\n\t\t\tfilesaver.readyState = filesaver.INIT;\r\n\t\t\tif (!name) {\r\n\t\t\t\tname = \"download\";\r\n\t\t\t}\r\n\t\t\tif (can_use_save_link) {\r\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tsave_link.href = object_url;\r\n\t\t\t\t\tsave_link.download = name;\r\n\t\t\t\t\tclick(save_link);\r\n\t\t\t\t\tdispatch_all();\r\n\t\t\t\t\trevoke(object_url);\r\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\r\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\r\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\r\n\t\t\t// Update: Google errantly closed 91158, I submitted it again:\r\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\r\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\r\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\r\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\r\n\t\t\t\tblob_changed = true;\r\n\t\t\t}\r\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\r\n\t\t\t// in WebKit, I append .download to the filename.\r\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\r\n\t\t\tif (webkit_req_fs && name !== \"download\") {\r\n\t\t\t\tname += \".download\";\r\n\t\t\t}\r\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\r\n\t\t\t\ttarget_view = view;\r\n\t\t\t}\r\n\t\t\tif (!req_fs) {\r\n\t\t\t\tfs_error();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfs_min_size += blob.size;\r\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\r\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\r\n\t\t\t\t\tvar save = function() {\r\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\r\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\r\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\r\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\r\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\r\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\r\n\t\t\t\t\t\t\t\t\trevoke(file);\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\twriter.onerror = function() {\r\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\r\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\r\n\t\t\t\t\t\t\t\t\t\tfs_error();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\r\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\twriter.write(blob);\r\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\r\n\t\t\t\t\t\t\t\t\twriter.abort();\r\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\r\n\t\t\t\t\t\t\t}), fs_error);\r\n\t\t\t\t\t\t}), fs_error);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\r\n\t\t\t\t\t\t// delete file if it already exists\r\n\t\t\t\t\t\tfile.remove();\r\n\t\t\t\t\t\tsave();\r\n\t\t\t\t\t}), abortable(function(ex) {\r\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\r\n\t\t\t\t\t\t\tsave();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfs_error();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t}), fs_error);\r\n\t\t\t}), fs_error);\r\n\t\t}\r\n\t\t, FS_proto = FileSaver.prototype\r\n\t\t, saveAs = function(blob, name, no_auto_bom) {\r\n\t\t\treturn new FileSaver(blob, name, no_auto_bom);\r\n\t\t}\r\n\t;\r\n\t// IE 10+ (native saveAs)\r\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\r\n\t\treturn function(blob, name, no_auto_bom) {\r\n\t\t\tif (!no_auto_bom) {\r\n\t\t\t\tblob = auto_bom(blob);\r\n\t\t\t}\r\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\r\n\t\t};\r\n\t}\r\n\r\n\tFS_proto.abort = function() {\r\n\t\tvar filesaver = this;\r\n\t\tfilesaver.readyState = filesaver.DONE;\r\n\t\tdispatch(filesaver, \"abort\");\r\n\t};\r\n\tFS_proto.readyState = FS_proto.INIT = 0;\r\n\tFS_proto.WRITING = 1;\r\n\tFS_proto.DONE = 2;\r\n\r\n\tFS_proto.error =\r\n\tFS_proto.onwritestart =\r\n\tFS_proto.onprogress =\r\n\tFS_proto.onwrite =\r\n\tFS_proto.onabort =\r\n\tFS_proto.onerror =\r\n\tFS_proto.onwriteend =\r\n\t\tnull;\r\n\r\n\treturn saveAs;\r\n}(\r\n\t   typeof self !== \"undefined\" && self\r\n\t|| typeof window !== \"undefined\" && window\r\n\t|| this.content\r\n));\r\n// `self` is undefined in Firefox for Android content script context\r\n// while `this` is nsIContentFrameMessageManager\r\n// with an attribute `content` that corresponds to the window\r\n\r\nif (typeof module !== \"undefined\" && module.exports) {\r\n  module.exports.saveAs = saveAs;\r\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\r\n  define([], function() {\r\n    return saveAs;\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}